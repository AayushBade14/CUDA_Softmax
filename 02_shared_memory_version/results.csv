"ID","Process ID","Process Name","Host Name","Kernel Name","Context","Stream","Block Size","Grid Size","Device","CC","Section Name","Metric Name","Metric Unit","Metric Value","Rule Name","Rule Type","Rule Description"
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","6.99",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.24",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","94,43,366",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","90.18",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","31.33",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","msecond","7.63",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","90.19",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","12.35",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","94,42,048.10",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","90.18",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved  close to 0% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","2.11",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","2.11",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","52.80",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","2.11",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","52.80",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (52.1%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","52.54",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","50.75",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","90.18",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","1.14",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","100.10",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","90.18",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","52.80",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.53",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","47.20",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","10.82",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","1.36",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 1.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 10.82 active warps per scheduler, but only an average of 1.36 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","20.49",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","20.49",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","31.85",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","22.06",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 6.5 cycles being stalled waiting for sibling warps at a CTA barrier. This represents about 31.9% of the total average of 20.5 cycles between issuing two instructions. A high number of warps waiting at a barrier is commonly caused by diverging code paths before a barrier that causes some warps to wait a long time until other warps reach the synchronization point. Whenever possible try to divide up the work into blocks of uniform workloads. Use the Source View's sampling columns to identify which barrier instruction causes the most stalls and optimize the code executed before that synchronization point first."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","CPIStall","INF","Check the Source Counters section for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides more details on each stall reason."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","ThreadDivergence","WRN","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 31.8 threads being active per cycle. This is further reduced to 22.1 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible. In addition, ensure your kernel makes use of Independent Thread Scheduling, which allows a warp to reconverge after a data-dependent conditional block by explicitly calling __syncwarp()."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","49,85,351.56",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","39,88,28,125",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","49,85,452.69",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","39,88,36,215",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Block Size","","256",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Grid Size","","3,90,625",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","16",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","16.38",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","1.02",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Threads","thread","10,00,00,000",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","3,255.21",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","16",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","6",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","48",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","100",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","90.80",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","43.59",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","","","","Occupancy","INF","This kernel's theoretical occupancy is not impacted by any block limit."
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.10",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","4,10,15,625",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","100",
"0","116196","softmax_shared","127.0.0.1","generate_data(float *, float *)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","6.99",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.24",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","1,00,23,052",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","88.08",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","58.98",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","msecond","8.10",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","88.10",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","22.20",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","1,00,20,725.05",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","88.08",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing workloads in the Compute Workload Analysis section."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 3% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","2.13",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","2.13",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","53.26",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","2.13",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","53.26",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (45.3%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","98.90",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","49.52",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","88.08",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","49.79",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","50.85",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","88.08",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","53.26",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.53",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","46.74",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","10.92",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","1.20",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 1.9 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 10.92 active warps per scheduler, but only an average of 1.20 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","20.50",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","20.50",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","31.86",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","22.72",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","ThreadDivergence","WRN","Instructions are executed in warps, which are groups of 32 threads. Optimal instruction throughput is achieved if all 32 threads of a warp execute the same instruction. The chosen launch configuration, early thread completion, and divergent flow control can significantly lower the number of active threads in a warp per cycle. This kernel achieves an average of 31.9 threads being active per cycle. This is further reduced to 22.7 threads per warp due to predication. The compiler may use predication to avoid an actual branch. Instead, all instructions are scheduled, but a per-thread condition code or predicate controls which threads execute the instructions. Try to avoid different execution paths within a warp when possible. In addition, ensure your kernel makes use of Independent Thread Scheduling, which allows a warp to reconverge after a data-dependent conditional block by explicitly calling __syncwarp()."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","53,36,914.06",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","42,69,53,125",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","53,37,018.24",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","42,69,61,459",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","InstructionStats","","","","FPInstructions","WRN","This kernel executes 12500000 fused and 37500000 non-fused FP32 instructions. By converting pairs of non-fused instructions to their fused (https://docs.nvidia.com/cuda/floating-point/#cuda-and-floating-point), higher-throughput equivalent, the achieved FP32 performance could be increased by up to 38% (relative to its current performance). Check the Source page to identify where this kernel executes FP32 instructions."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Block Size","","256",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Grid Size","","3,90,625",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","16",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","16.38",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","Kbyte/block","1.02",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Threads","thread","10,00,00,000",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","3,255.21",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","16",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","6",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","48",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","100",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","91.59",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","43.96",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","","","","Occupancy","INF","This kernel's theoretical occupancy is not impacted by any block limit."
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.10",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","4,10,15,625",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","100",
"1","116196","softmax_shared","127.0.0.1","first_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Frequency","cycle/nsecond","6.98",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Frequency","cycle/nsecond","1.24",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Elapsed Cycles","cycle","61,99,103",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Memory Throughput","%","95.19",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","DRAM Throughput","%","95.19",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Duration","msecond","5.02",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L1/TEX Cache Throughput","%","23.19",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","L2 Cache Throughput","%","35.38",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","SM Active Cycles","cycle","61,97,729.65",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","GPU Speed Of Light Throughput","Compute (SM) Throughput","%","40.97",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight","","","","SOLBottleneck","INF","The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To further improve performance, work will likely need to be shifted from the most utilized to another unit. Start by analyzing DRAM in the Memory Workload Analysis section."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SpeedOfLight_RooflineChart","","","","SOLFPRoofline","INF","The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 3% of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for more details on roofline analysis."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Active","inst/cycle","1.64",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Executed Ipc Elapsed","inst/cycle","1.64",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issue Slots Busy","%","40.97",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","Issued Ipc Active","inst/cycle","1.64",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Compute Workload Analysis","SM Busy","%","40.97",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","ComputeWorkloadAnalysis","","","","HighPipeUtilization","INF","ALU is the highest-utilized pipeline (26.5%) based on active cycles, taking into account the rates of its different instructions. It executes integer and logic operations. It is well-utilized, but should not be a bottleneck."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Memory Throughput","Gbyte/second","159.44",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Busy","%","35.38",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Max Bandwidth","%","95.19",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L1/TEX Hit Rate","%","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Success Rate","%","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Compression Ratio","","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","L2 Hit Rate","%","50.05",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Memory Workload Analysis","Mem Pipes Busy","%","15.13",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","One or More Eligible","%","41.01",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Issued Warp Per Scheduler","","0.41",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","No Eligible","%","58.99",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Active Warps Per Scheduler","warp","10.21",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Scheduler Statistics","Eligible Warps Per Scheduler","warp","0.80",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","SchedulerStats","","","","IssueSlotUtilization","WRN","Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only issues an instruction every 2.4 cycles. This might leave hardware resources underutilized and may lead to less optimal performance. Out of the maximum of 12 warps per scheduler, this kernel allocates an average of 10.21 active warps per scheduler, but only an average of 0.80 warps were eligible per cycle. Eligible warps are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible warp results in no instruction being issued and the issue slot remains unused. To increase the number of eligible warps, avoid possible load imbalances due to highly different execution durations per warp. Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Issued Instruction","cycle","24.91",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Warp Cycles Per Executed Instruction","cycle","24.91",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Active Threads Per Warp","","32.00",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Warp State Statistics","Avg. Not Predicated Off Threads Per Warp","","28.06",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","CPIStall","WRN","On average, each warp of this kernel spends 17.1 cycles being stalled waiting for a scoreboard dependency on a L1TEX (local, global, surface, texture, rtcore) operation. This represents about 68.5% of the total average of 24.9 cycles between issuing two instructions. To reduce the number of cycles waiting on L1TEX data accesses verify the memory access patterns are optimal for the target architecture, attempt to increase cache hit rates by increasing data locality or by changing the cache configuration, and consider moving frequently used data to registers and to shared memory."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","WarpStateStats","","","","CPIStall","INF","Check the Source Counters section for the top stall locations in your source based on sampling data. The Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides more details on each stall reason."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Executed Instructions Per Scheduler","inst","25,39,039.70",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Executed Instructions","inst","20,31,23,176",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Avg. Issued Instructions Per Scheduler","inst","25,39,099.70",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Instruction Statistics","Issued Instructions","inst","20,31,27,976",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Block Size","","256",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Function Cache Configuration","","CachePreferNone",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Grid Size","","3,90,625",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Registers Per Thread","register/thread","18",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Shared Memory Configuration Size","Kbyte","8.19",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Driver Shared Memory Per Block","Kbyte/block","1.02",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Dynamic Shared Memory Per Block","byte/block","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Static Shared Memory Per Block","byte/block","0",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Threads","thread","10,00,00,000",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Launch Statistics","Waves Per SM","","3,255.21",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit SM","block","16",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Registers","block","10",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Shared Mem","block","8",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Block Limit Warps","block","6",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Active Warps per SM","warp","48",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Theoretical Occupancy","%","100",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Occupancy","%","86.01",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","Achieved Active Warps Per SM","warp","41.28",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Occupancy","","","","Occupancy","WRN","This kernel's theoretical occupancy is not impacted by any block limit. The difference between calculated theoretical (100.0%) and measured achieved occupancy (86.0%) can be the result of warp scheduling overheads or workload imbalances during the kernel execution. Load imbalances can occur between warps within a block as well as across blocks of the same kernel. See the CUDA Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on optimizing occupancy."
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions Ratio","%","0.22",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Instructions","inst","4,37,49,179",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Branch Efficiency","%","100.00",
"2","116196","softmax_shared","127.0.0.1","second_pass(float *, float *, float)","1","7","(256, 1, 1)","(390625, 1, 1)","0","8.6","Source Counters","Avg. Divergent Branches","","0.06",
